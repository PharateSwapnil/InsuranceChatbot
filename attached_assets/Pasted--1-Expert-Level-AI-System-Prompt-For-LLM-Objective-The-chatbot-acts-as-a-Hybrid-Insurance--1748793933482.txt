✅ 1. Expert-Level AI System Prompt (For LLM)
🧠 Objective:
The chatbot acts as a Hybrid Insurance Sales Agent for Sales Representative. It should:

Suggest the best Aditya Birla insurance based on Cutomer profile and goals.
Compare other companies’ insurance policies with Aditya Birla’s offerings.

Upsell/cross-sell where applicable.
Explain terms simply and clearly.
Provide real-time quotes or links (if integrated with backend).
Maintain a professional and empathetic tone.

🧾 Full System Prompt:
You are "ABHi" (Aditya Birla Hybrid Insurance) Assistant — a professional AI insurance policy sales representative for Aditya Birla Insurance.

Your job is to:
1. Understand Customers needs and demographics (age, gender, income, marital status, health conditions, dependents(family members), profession, existing insurance, financial goals, etc.).
2. Recommend the most suitable insurance policy offered by Aditya Birla Insurance across:
   - Health Insurance
   - Life Insurance
   - Term Plans
   - Child Plans
   - Retirement Plans
   - Investment-linked Insurance (ULIPs)
3. If the customer already holds an insurance policy with another provider along with Aditya Birla Insurance policy:
   - Use available APIs or external services (like Google or IRDAI public info) to understand and retrieve comparable plans.
   - Perform a feature and benefit comparison (coverage, premium, claim settlement ratio, tax benefit, rider options, etc.).
   - Suggest an Aditya Birla policy with stronger benefits and explain why it's better.
4. Clearly answer any insurance-related questions in simple terms.
5. Adapt the conversation based on the Customers’s emotional cues (e.g., confused, in a hurry, skeptical).
6. Adhere to privacy and regulatory standards (like IRDAI).

Respond like a smart, friendly advisor who always aims to **build trust and long-term relationships**, not just make a sale.

📌 Sample Flow: Competitor Comparison via API
mermaid
sequenceDiagram
user == Salesman / sales representative
Customer == policy Holder of Aditya Birla
use LLM Api from .env

Cutomer ->> Chatbot: I have ICICI Pru iProtect Smart Plan
Chatbot ->> Internal Policy API: Get Aditya Birla matching term plans
Internal API-->>Chatbot: Birla Protect@Ease
Chatbot ->> Customer: Side-by-side comparison + recommendation How Aditya Birla Policies are the best.

Important:
- Use natural, empathetic, and jargon-free language.
- Use bullet points or tables for comparisons when needed.
- Always ask clarifying questions if the user query is vague.
- Never give fake information — rely on verified internal or public data sources.

           +-----------------+
           |     user        |
           +--------+--------+
                    |
                    v
     +----------------------------------+
     |  Chatbot Interface (   |
     |  FastAPI, React, Tailwind css)           |
     +----------------+-----------------+
                      |
                      v
     +----------------+----------------+
     | Question Router / Intent Classifier |
     +--------+-----------------------+
              |                             |
              v                             v
    +------------------+         +----------------------+
    | Web Scraper or    |         |     Web Search Tool  |
    | API Extractor     |         |       (Google)       |
    +------------------+         +----------------------+
              |
              v
    +-------------------------------+
    | Vector Store + Embeddings     |
    | (FAISS)   |
    +-------------------------------+
              |
              v
    +-------------------------------+
    |  Langchain LLM (Groq / Claude / etc.) |
    +-------------------------------+
              |
              v
     +-----------------------------+
     |         Final Answer        |
     +-----------------------------+


✅ 2. Database Design – What Information You Need
Below is a detailed schema of the data your system should store and use to personalize responses.

*** write a script to create below mentioned tables, use sqlite.
i want cutomers having aditya birla's at least one policy and along with it hold 2 other comapnies policies
and i want to create 100 customers dummy account & their data for my analysis purpose. stored the data files for my testing purpose.

📂 Cutomer Profile Table
Field	Type	Description
Cutomer_id	UUID	Unique identifier
name	Text	Full name
age	Integer	Age
gender	Text	M/F/Others
marital_status	Text	Single/Married/Widowed/Divorced
profession	Text	Job title or role
income_bracket	Text	e.g. <5L, 5-10L, 10-25L, >25L
annual_income	Decimal	Optional detailed field
city/state	Text	Location
dependents_count	Integer	Number of people dependent
health_conditions	JSON	{ "diabetes": true, "heart_disease": false }
financial_goals	Text[]	Retirement, Child Education, Tax Saving, etc.
risk_appetite	Text	Low/Medium/High
lifestyle	Text	Smoker/Non-smoker, Exercise habits
existing_policies	JSON	[{provider: "ICICI", type: "Term", premium: 10000, coverage: 50L, term: 20yrs}]
lead_source	Text	Web/Facebook/Branch/Referral etc.
last_login	Timestamp	-

📂 Product Catalog Table (Aditya Birla Policies)
Field	Type	Description
policy_id	UUID	Unique policy ID
name	Text	Policy name
type	Text	Life, Health, Term, Retirement, Child, ULIP
eligibility_criteria	JSON	Age limits, Income requirements
coverage_amounts	Decimal[]	Coverage options
term_range	Text	5–40 years
premium_range	Decimal[]	Based on age & coverage
tax_benefits	Text	Section 80C/10D etc.
claim_settlement_ratio	Decimal	%
riders_available	Text[]	Accident, Critical Illness, Waiver of Premium
features	Text[]	Paperless KYC, Family Floater, Cashless Network
documents_required	Text[]	Aadhar, PAN, Income Proof
last_updated	Timestamp	-

📂 Third-Party Policy Comparison Table
Field	Type	Description
provider	Text	LIC, ICICI, HDFC etc.
policy_name	Text	Name of policy
type	Text	Term, Life, Health etc.
coverage_amount	Decimal	-
premium	Decimal	-
policy_term	Text	5–30 yrs
claim_settlement_ratio	Decimal	-
features	Text[]	Critical illness, Return of premium, etc.
pros	Text[]	Summary points
cons	Text[]	Weaknesses
fetched_from	Text	Google/API/IRDAI
last_checked	Timestamp	-

📂 Interaction Logs (for learning & audit)
Field	Type	Description
chat_id	UUID	Unique session
user_id	UUID	FK
messages	JSON	[{role: user/ai, content: "..."}]
created_at	Timestamp	-
recommended_policy	UUID	FK
conversion_status	Text	Interested / Purchased / Rejected
feedback_rating	Integer	1-5

✅Multi-turn conversations with memory (USER-specific).
Supports Retrieval-Augmented Generation (RAG).

                                   +---------------------+
                                  |     USER Interface   |
                                  |        (WebApp)      |
                                  +----------+----------+
                                             |
                                             v
                          +------------------+--------------------+
                          |        Chatbot Orchestrator           |
                          | (FastAPI, LangChain, or custom app)   |
                          +-----------+----------------------------+
                                      |
            +-------------------------+-------------------------+
            |                                                   |
            v                                                   v
  +------------------------+                      +----------------------------+
  |  Conversational Memory |                      |  Retrieval (RAG Component) |
  |  (Vector DB + History) |                      |  (FAISS)                   |
  +------------------------+                      +-------------+--------------+
            |                                                    |
            v                                                    v
+-----------------------------+               +----------------------------------+
|  Memory Retrieval + Summary |               |   Document / Web Data Loader     |
|   (LangChain) |                             | (Scraper, PDF, API, Web Search) |
+-------------+---------------+               +----------------+----------------+
              |                                                 |
              +-------------------+-----------------------------+
                                      |
                                      v
                    +----------------+----------------+
                    |     LLM Engine (Chat)           |
                    | (Groq, Claude, Mistral, etc.)  |
                    +----------------+----------------+
                                     |
                                     v
                       +-------------+-------------+
                       |    Response Generator     |
                       +-------------+-------------+
                                     |
                                     v
                           +---------+----------+
                           |     Final Answer   |
                           +--------------------+


✅ 1. UI/UX Design Guidelines (Modern Enterprise-Level)
***create asthetic regestration page (sign in/ login/ userid/ username/ password/ forgot password etc). suggest tested and dummy userid/ passwords. 

In the UI layout, include a **modern round shape search bar fixed at the top** of the screen that allows searching for available customer names dynamically. This search bar should:
- Support autocomplete with live filtering based on name, phone number, or email.
- Display basic preview (name, DOB, city, family details) in dropdown.
- Load full customer profile into the left panel when selected.

Once a customer is selected:
- Display the **customer profile and details in a vertical pane on the left (taking ~25% width)**.
- Show their demographics, existing policies, financial goals, etc.
- This **left information panel** and the **right AI chat panel (75%)** should both be **resizable and adjustable** (drag-based UI divider).
- The AI chat should occur on the right side, continuously updating in a scrollable conversation view.

Maintain a sleek, responsive layout where the search bar, profile info, and chat experience are optimized for both **desktop and tablet devices**.

🖥️ App Layout
Header: Branding, Notification Bell, Chatbot Status ("Hi, I’m ABHi 🤖") ABHi-Aditya Birla Hybrid insurance Assistant

Main Window: Conversational AI widget (multi-turn, card suggestions, file uploads(attachments- aligned to prompt box))

Sidebar:
Navigation: Dashboard, My Policies, Compare Plans, Calculator Tools
Quick Tools: Claim Tracker, Quote Estimator
Footer: Legal disclaimers, Privacy Notice, IRDAI Certification -(all should be in filled in detailed and responsive)

🔍 Search Bar (Top)	- Type-ahead search
- Filters by name/email/phone
- Material-UI style with elevation/shadow
- Shows recent searches
👤 Left Panel (25%)	- Customer info (cards or sections)
- Tabs: Profile,-> Policies, Goals, History
- Scrollable and collapsible
💬 Right Panel (75%)	- Chatbot conversation
- Smart suggestions/buttons
- Voice input (optional)
- File upload
↔️ Resizable Divider	- Drag to resize info vs chat panel
- Cursor changes to grab/move
- Resizes dynamically with persistence (optional: save state)

🎨 Design Style
Element	Recommendation

🎨 Recommended Color Palette
Color Type	Color Name	Hex Code	Usage
🟥 Primary	Birla Red	#B5121B	Brand identity, primary buttons
🟦 Secondary	Trust Navy Blue	#1C2B4D	Header background, cards, side nav
🟨 Accent	Gold Accent	#D4AF37	Highlights, icons, emphasis areas
⚪ Background	Clean White	#FFFFFF	Main app background
🩶 Surface	Light Grey	#F5F6FA	Chat background, forms, section cards
⚫ Text Primary	Deep Charcoal	#2D2D2D	Headlines, important text
🩷 Secondary Text	Muted Grey	#666666	Descriptions, less important text
🔘 Borders/Dividers	Soft Grey	#E0E0E0	UI boundaries, table dividers
🟢 Success	Emerald Green	#2E7D32	Success messages, policy approval
🔴 Error	Crimson Red	#D32F2F	Form validation, alerts
🔵 Link/Action	Azure Blue	#007BFF	Hyperlinks, minor CTAs

🧑‍🎨 Sample Use Cases
✅ Buttons:
Primary CTA: Red (#B5121B) with white text
Secondary CTA: Navy (#1C2B4D) or outlined in gold
Hover Effect: Slight shadow, lighten background

🧾 Cards:
Background: #F5F6FA
Borders: #E0E0E0
Header: Navy or red strip
Icons: Gold or Azure Blue

💬 Chat UI:
User bubble: Navy text, white background
AI bubble: White text, red background (#B5121B)
Timestamps: Muted grey

🔍 Search Bar:
Background: White
Border: Soft Grey
Text: Deep Charcoal

Shadow: Light gold tone on focus

📊 Tables / Comparisons:
Alternating row: #F5F6FA and white
Column headers: Navy background, white text
Highlights: Gold for benefits, Crimson for cons

📱 Responsive UI Guidelines
On tablets/mobile, reduce gold usage to prevent visual overload.

Use deep red and navy only for important CTAs and headers.

Maintain white space between cards and components for a clean enterprise feel.

💡 Accessibility Tips
Ensure text contrast: Navy on white or gold on navy = ✅
Use tooltips or icons for explanation near gold-accented buttons
Avoid red+green combinations for critical UI actions (color-blind users)

💡 Bonus UI Features

Policy comparison view: Table with rows for Aditya Birla and competitors
Smart prompts: “Show me best tax-saving insurance under ₹15K/year”
Personalized greetings: “Welcome back, Rajesh 👋 Your last quote was ₹18,000/year. Need help?” ,where rajesh is (salesman/user)

✅ 4. Next Steps (Development Suggestions)
Tech Stack:

Frontend: React + Tailwind + TypeScript
Backend: Python FastAPI 
AI Layer: Groq / Claude / Gemini with hybrid plugin integration Use Langchain for multi LLM integrations
Database: PostgreSQL / MongoDB
API Sources: IRDAI public dataset, Google Search API, PolicyBazaar APIs

🧪 Monitoring & Analytics
Track:
Quotes generated
Conversions
Drop-offs per step
Chat quality (feedback/rating)
Use tools like: Sentry, Datadog, Mixpanel, or OpenTelemetry

📦 Core APIs to Integrate
1. 🧾 IRDAI (Insurance Regulatory and Development Authority of India) APIs
Some public data like claim ratios, approved insurers, and policy guidelines are available via:
Web scraping (for now) or official APIs (if accessible).
Source	https://www.irdai.gov.in
What to get	Claim ratios, insurer performance, approved plans


create .env file for credentials and use all credentials from .env file in repository.
also create detailed Readme file where i will get to know the implemented application features, future improvements,
all UI buttons backend code, all folder structurewise scripts and its work & functionalities.


